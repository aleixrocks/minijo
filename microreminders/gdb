compile with -g[0-3] o -ggdb[1-3]. To archive most amount of information
use -ggdb3. The number means 1 (less) 2 (medium) 3 (high) amount of info

compile with -W - Wall. It gives more warnings.

general
 - run -> run the program
     - you can specify argumentes here. to reset arguments type "set args"
 - continue -> continue execution
 - help command -> help!
 - where (same as bt) -> print where you are.
 - when enter is pressed without typing a command, last comand is used.
 - backtrace (bt) -> print stack trace. On functions call, if we see
   something like name_function=@ffbef014, we know that the 
   first parameter of the function is allocated in ffbef014
 - x address -> examine the address, get the value.
 - frame n (f n) -> change stack frame (a frame is a function call info stored
   in the stack, each call one frame). Displays args and local vars.
 - up, down -> go up and down on the stack frames

MALDAD
 - attach processID -> debug an alreeady running process. The process
   will halt unitl gdb exit.
 - deatch -> deatach process so it can continue executing normaly

Variables
 - print or p nomVar/nomFuncio -> print variable. Variable must be 
   abailable on the current context. We can flip context with "frame". 
   You can typecast a variable by typing print (char) variable.
 - ptype or pt nomvar-> print type of variable
 - p myarray[3]@5 -> print 5 elements of myarray from 3t position.
 - set print pretty -> print more pretty structs and stuff
 - print /FMT variable -> where /FMT is
      o octal, x hex, d decimal, u unsigned decimal,t binary, 
      f float, a address, c char
 - print *(&a) -> just like c. & gets address and * value.
 - set variable = value -> give value to variable
 - printf "X = %d, Y = %d\n",X,Y -> just like C

Breakpoints
 - break functionname/linenumber -> new breakpoint
 - condition numBreakpoint variaable1==variable2 -> make numBreakpoint 
   breakpoint execute only when condition is true.
 - info breakpoints -> show breakpoints
 - step -> execute just one step entering inside functions
 - next -> execute just one step without entering inside functions
 - disable n -> disable breakpoint n
 - enable n -> enable breakpoint n
 - clear -> remove by its location
 - delete -> remove by its identifier

List
 - list or "l" -> list code
	 - starting with some line number	(gdb) list 5,
	 - ending with some line number	(gdb) list ,28
	 - between two numbers:	(gdb) list 21,25
	 - by function name:	(gdb) list f
	 - functions in the other file:	(gdb) list CentralDiff
	 - by filename and line number:	(gdb) list derivative.c:12
	 - filename and function name:	(gdb) list derivative.c:ForwardDiff
 - set listsize 5 -> change list size

Localitzation
 - frame -> returns frame where gdb is it. frame is the header of a 
   function call stored on the stack.
 - frame numFrame -> swtich to numFrame so variables are available.
 - where -> print where you are.

Checkpoints
 - checkpoint -> store current process status
 - restart idcheckpoing -> restart program since checkpoint
 - info checkpoints -> list all chekpoints and idcheckpoints

Others
 - call x() -> call function (yes! during execution time!)


MULTI THREAD DEBUGGING
 - info thread -> list current executing threads on cpu's
 - thread <thread-id> -> switch to selected thread
 - thread <name> -> assign name to thread

GDB TEXT USER INTERFACE (GDBTUI)
 - These are the following available views (at most 2 windows)
     - source only,
     - assembly only,
     - source and assembly,
     - source and registers, or
     - assembly and registers.

key-bindings
 - C-x C-a, C-x a, C-x A -> Enter or leave the TUI mode. 
 - C-x 1 Use a TUI layout with only one window. The layout will either be
   ‘source’ or ‘assembly’. When the TUI mode is not active, it will switch to
   the TUI mode.
 - C-x 2 Use a TUI layout with at least two windows. When the current layout
   already has two windows, the next layout with two windows is used. 
 - C-x o Change the active window (focus). 
 - C-x s Switch in and out of the TUI SingleKey mode that binds single keys to
   gdb commands (to avoid use control).  
 - C-L Refresh the screen.
 - The following key bindings only work in the TUI mode to navigate source
   <PgUp>, <PgDn>, <Up>, <Down>, <Left>, <Right>

commands

 - tui enable -> Activate TUI mode. 
 - tui disable -> Disable TUI mode.
 - info win -> List and give the size of all displayed windows. 
 - layout <name> -> Changes which TUI windows are displayed. 
     - next -> Display the next layout. 
     - prev -> Display the previous layout. 
     - src -> Display the source and command windows. 
     - asm -> Display the assembly and command windows. 
     - split -> Display the source, assembly, and command windows. 
     - regs -> When in src layout display the register, source, and command
         windows. When in asm or split layout display the register,  assembler, 
         and command windows.

 - focus <name> -> Changes which TUI window is currently active for scrolling.
   The name parameter can be any of the following:
     - next -> Make the next window active for scrolling. 
     - prev -> Make the previous window active for scrolling. 
     - src -> Make the source window active for scrolling. 
     - asm -> Make the assembly window active for scrolling. 
     - regs -> Make the register window active for scrolling. 
     - cmd -> Make the command window active for scrolling.

 - refresh -> Refresh the screen. This is similar to typing C-L. 
 - tui reg <group> -> Changes the register group displayed in the tui register
   window to group. If the register window is not currently displayed this command
   will cause the register window to be displayed. The list of register groups, as
   well as their order is target specific. The following groups are available on
   most targets:
     - next -> next one
     - prev -> previous one
     - general -> Display the general registers. 
     - float -> Display the floating point registers. 
     - system -> Display the system registers. 
     - vector -> Display the vector registers. 
     - all -> Display all registers.

 - update -> Update the source window and the current execution point. 
 - winheight <name> [+|-]count -> Change the height of the window name by count 
   lines. The name parameter: src, cmd, asm or regs 
 - tabset nchars -> Set the width of tab stops to be nchars characters. This
   setting affects the display of TAB characters in the source and assembly
   windows.

search source file
 - list *(function+offset) -> where offset is hexa 0x137 for instance and
   function a function name.

altres comandes
 - comanda linux size: size of elements of an object file .o
 - comanda linux strip: extirpa trosos d'un executable, com la 
   seccio .text or la symbol table
